"""Updated table organisation, brand, product

Revision ID: e2fa726aba21
Revises: ef7f3eaf6f18
Create Date: 2022-02-03 11:16:49.056824

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e2fa726aba21'
down_revision = 'ef7f3eaf6f18'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organisation',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organisation_name', sa.String(), nullable=True),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('brand',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('brand_name', sa.String(), nullable=True),
    sa.Column('brand_type', sa.String(), nullable=True),
    sa.Column('organisation_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['organisation_uuid'], ['organisation.uuid'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('product',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_name', sa.String(), nullable=True),
    sa.Column('product_type', sa.String(), nullable=True),
    sa.Column('brand_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['brand_uuid'], ['brand.uuid'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.add_column('projects', sa.Column('product_uuid', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_foreign_key(None, 'projects', 'product', ['product_uuid'], ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_column('projects', 'product_uuid')
    op.drop_table('product')
    op.drop_table('brand')
    op.drop_table('organisation')
    # ### end Alembic commands ###
